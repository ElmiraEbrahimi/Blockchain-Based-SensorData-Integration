# Generated by Django 4.1.6 on 2023-02-07 13:40

import core.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MiddlewareFilter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('model_created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('model_modified_at', core.models.AutoDateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(default='Middleware Filters', max_length=255)),
                ('interval_publish_to_broker', models.FloatField(default=3, verbose_name='Broker Publish Interval')),
                ('interval_publish_to_blockchain', models.FloatField(default=5, verbose_name='Blockchain Publish Interval')),
            ],
            options={
                'verbose_name_plural': 'Middleware Filters',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('model_created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('model_modified_at', core.models.AutoDateTimeField(default=django.utils.timezone.now)),
                ('notif_type', models.CharField(choices=[('bl', 'Blockchain')], max_length=2, verbose_name='Notification Type')),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
